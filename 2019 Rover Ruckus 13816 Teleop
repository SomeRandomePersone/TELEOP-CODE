 package org.firstinspires.ftc.robotcontroller.external.samples;
   
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.util.ElapsedTime;
import java.text.SimpleDateFormat;
import java.util.Date;  

   @Override //Taking methods and giving it different functions.
    public void init() {
    
        telemetry.addData("Status", "Initialized"); //Adding new robot state data
        
        leftMotor  = hardwareMap.dcMotor.get("left_drive");
        rightMotor = hardwareMap.dcMotor.get("right_drive");
        IntakeMotor = hardwareMap.dcMotor.get("particle_intake");
        lsMotor = hardwareMap.dcMotor.get("left_particle_shooter");
        rsMotor = hardwareMap.dcMotor.get("right_particle_shooter"); //Assinging HardwareMap object to the right and left drive variables.
        telemetry.addData("Status", "Initialized"); //Adjusting data of robot state

        leftMotor.setDirection(DcMotor.Direction.REVERSE); // Set to REVERSE if using AndyMark motors
        rightMotor.setDirection(DcMotor.Direction.FORWARD);// Set to FORWARD if using AndyMark motors
        IntakeMotor.setDirection(DcMotor.Direction.REVERSE);
        lsMotor.setDirection(DcMotor.Direction.REVERSE);
        rsMotor.setDirection(DcMotor.Direction.FORWARD);

    }

    @Override
    
    public void init_loop() {
    }

    @Override
    
    public void start() {
        runtime.reset();

    }
    @Override
    
    public void loop() {
    
        telemetry.addData("Status", "Running: " + runtime.toString());
        leftMotor.setPower(-gamepad1.left_stick_x); //objects connecting to hardwaremap
        rightMotor.setPower(-gamepad1.right_stick_y); //objects connecting to hardwaremap
        IntakeMotor.setPower(-gamepad1.right_trigger); //objects connecting to hardwaremap
        lsMotor.setPower(-gamepad1.left_trigger); //objects connecting to hardwaremap
        rsMotor.setPower(-gamepad1.left_trigger); //objects connecting to hardwaremap
        
    }

    @Override

    public void stop() {

    }







